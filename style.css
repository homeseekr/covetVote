:root {  
  --green: rgb(42, 252, 152);
  --blue: rgb(41, 121, 255);
  --card-color: rgb(25, 25, 25);
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

@keyframes float {
  from, to {
    transform: translateY(-0%);
  }
  
  50% {    
    transform: translateY(-3%);
  }
}

@keyframes background-pan {
  from {
    background-position: 1000% center;
  }
  
  to {
    background-position: 0% center;
  }
}

body {
  height: 100vh;
  background-color: black;
  margin: 0rem;
  overflow-x: hidden;
  overflow-y: scroll-y;
  display: grid;
  place-items: center;
}

a {
  text-decoration: none;
}

/* -- Contact Cards -- */
#cards {
  display: grid;
  gap: 1em;
  grid-template-columns: repeat(3, 3fr);
  max-width: calc(100% - 4em); /* updated property */
  padding: 1em 2em; /* updated property */
  place-self: center;
  position: relative;
  width: 100%;
  z-index: 2;
}

.card {
  background-color: var(--card-color);
  border-radius: 0.75em;
  cursor: pointer;
  height: 41vh;
  position: relative;
}

#cards :first-child {
  grid-column: 1 / -1;
}

.card:hover:before {
  opacity: 1;
}

.card:before {
  background: linear-gradient(
    45deg,
    transparent 5%,
    var(--blue) 50%,
    transparent 99%
  );
  border-radius: inherit;
  content: "";
  inset: 0px;
  opacity: 0;
  position: absolute;
  transition: opacity 400ms;
  z-index: 0;
}

.card-content {
  background-color: var(--card-color);
  border-radius: inherit;
  display: grid;
  inset: 1px;
  padding: 1em;
  justify-content: center;
  align-items: center;
  position: absolute;
  font-size: 250%;
}

.card-text {
  position: absolute;
  top: calc(50% + 28px);
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.36em; /* Adjust the font size as needed */
  color: #828282; /* Adjust the color as needed */
  text-align: center;
}

.card a {
  display: block;
  height: 100%;
  border-radius: 10px;
}

.meta-link {
  align-items: center;
  backdrop-filter: blur(3px);
  background-color: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 6px;
  bottom: 10px;
  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
  cursor: pointer;  
  display: inline-flex;
  gap: 5px;
  left: 10px;
  padding: 10px 20px;
  position: fixed;
  text-decoration: none;
  transition: background-color 400ms, border-color 400ms;
  z-index: 10000;
}

.meta-link:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.meta-link > i, .meta-link > span {
  height: 20px;
  line-height: 20px;
}

.meta-link > span {
  color: white;
  font-family: "Rubik", sans-serif;
  font-weight: 500;
}

#blur {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  position: fixed; /* Change from absolute to fixed */
  z-index: -2;
  backdrop-filter: blur(2px);
}

#background {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  position: fixed;
  z-index: -3;
  background-image: url('background.png');
  background-size: cover;
  pointer-events: none; /* Ensure this element doesn't interfere with pointer events */
}

h1 {
  font-family: 'Space Mono', monospace;
  font-size: clamp(3rem, 10vw, 10rem);
  color: white;
  padding: 0rem clamp(1rem, 2vw, 3rem);
  border-radius: clamp(0.4rem, 0.75vw, 1rem);
  margin: 0rem;
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  z-index: -1;
}

/* Return button */

#returnButton {
  padding: 1em 1em; /* Adjust padding as needed */
  background-color: var(--card-color); 
  border: none;
  border-radius: 0.75em;
  font-size: 1em;
  color: #828282;
  cursor: pointer;
  justify-self: start; /* Align button to the start of the container */
  grid-row: 1;
}

.gridTitle {
  grid-row: 1;
}

